version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - db_value:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5

  backend-migrations:
    build: ../backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    command: python manage.py migrate

  backend:
    build: ../backend
    restart: always
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/media/
    depends_on:
      db:
        condition: service_healthy
      backend-migrations:
        condition: service_started
    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - /etc/letsencrypt/live/artpech.ddns.net/fullchain.pem:/etc/nginx/conf.d/fullchain.pem
      - /etc/letsencrypt/live/artpech.ddns.net/privkey.pem:/etc/nginx/conf.d/privkey.pem
      - static_value:/var/html/backend_static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend

volumes:
  static_value:
  media_value:
  db_value: